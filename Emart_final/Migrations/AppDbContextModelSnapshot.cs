// <auto-generated />
using System;
using Emart_final.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emart_final.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Emart_final.Models.Cart", b =>
                {
                    b.Property<int>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartID"));

                    b.Property<int>("CustID")
                        .HasColumnType("int");

                    b.Property<double>("DeliveryCharges")
                        .HasColumnType("float");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("ProdID")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<double>("TotalBill")
                        .HasColumnType("float");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("CartID");

                    b.HasIndex("ProdID");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Emart_final.Models.Category", b =>
                {
                    b.Property<int>("catmasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("catmasterID"));

                    b.Property<string>("catImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("childflag")
                        .HasColumnType("bit");

                    b.Property<int>("parentCatID")
                        .HasColumnType("int");

                    b.HasKey("catmasterID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Emart_final.Models.Config", b =>
                {
                    b.Property<int>("ConfigID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigID"));

                    b.Property<string>("configname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConfigID");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("Emart_final.Models.ConfigDetails", b =>
                {
                    b.Property<int>("configDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("configDetailsID"));

                    b.Property<string>("configDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("configID")
                        .HasColumnType("int");

                    b.Property<int>("prodID")
                        .HasColumnType("int");

                    b.HasKey("configDetailsID");

                    b.HasIndex("configID");

                    b.HasIndex("prodID");

                    b.ToTable("ConfigDetails");
                });

            modelBuilder.Entity("Emart_final.Models.Customer", b =>
                {
                    b.Property<int>("custId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("custId"));

                    b.Property<int?>("CartID")
                        .HasColumnType("int");

                    b.Property<bool>("cardHolder")
                        .HasColumnType("bit");

                    b.Property<string>("custAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("points")
                        .HasColumnType("int");

                    b.HasKey("custId");

                    b.HasIndex("CartID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Emart_final.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<int>("CustID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomercustId")
                        .HasColumnType("int");

                    b.Property<double>("DeliveryCharge")
                        .HasColumnType("float");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("TotalAmt")
                        .HasColumnType("float");

                    b.Property<double>("TotalBill")
                        .HasColumnType("float");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CustomercustId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Emart_final.Models.InvoiceDetails", b =>
                {
                    b.Property<int>("InvoiceDtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDtID"));

                    b.Property<double>("CardHolderPrice")
                        .HasColumnType("float");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<double>("MRP")
                        .HasColumnType("float");

                    b.Property<int>("PointsRedeem")
                        .HasColumnType("int");

                    b.Property<int>("ProdID")
                        .HasColumnType("int");

                    b.HasKey("InvoiceDtID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProdID");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("Emart_final.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deliverydate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.HasIndex("CustID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Emart_final.Models.Product", b =>
                {
                    b.Property<int>("prodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prodID"));

                    b.Property<double>("cardHolderPrice")
                        .HasColumnType("float");

                    b.Property<int>("catmasterID")
                        .HasColumnType("int");

                    b.Property<string>("imgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("inventoryQuantity")
                        .HasColumnType("int");

                    b.Property<double>("mrpPrice")
                        .HasColumnType("float");

                    b.Property<double>("offerPrice")
                        .HasColumnType("float");

                    b.Property<int>("pointsRedeem")
                        .HasColumnType("int");

                    b.Property<string>("prodLongDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prodShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("prodID");

                    b.HasIndex("catmasterID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Emart_final.Models.Cart", b =>
                {
                    b.HasOne("Emart_final.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Emart_final.Models.ConfigDetails", b =>
                {
                    b.HasOne("Emart_final.Models.Config", "config")
                        .WithMany("configDetails")
                        .HasForeignKey("configID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emart_final.Models.Product", "product")
                        .WithMany("configDetailsList")
                        .HasForeignKey("prodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("config");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Emart_final.Models.Customer", b =>
                {
                    b.HasOne("Emart_final.Models.Cart", "cart")
                        .WithMany()
                        .HasForeignKey("CartID");

                    b.Navigation("cart");
                });

            modelBuilder.Entity("Emart_final.Models.Invoice", b =>
                {
                    b.HasOne("Emart_final.Models.Customer", null)
                        .WithMany("invoiceList")
                        .HasForeignKey("CustomercustId");
                });

            modelBuilder.Entity("Emart_final.Models.InvoiceDetails", b =>
                {
                    b.HasOne("Emart_final.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetailstList")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emart_final.Models.Product", "Product")
                        .WithMany("invoiceDetailsList")
                        .HasForeignKey("ProdID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Emart_final.Models.Order", b =>
                {
                    b.HasOne("Emart_final.Models.Customer", "Customer")
                        .WithMany("orderList")
                        .HasForeignKey("CustID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emart_final.Models.Invoice", "Invoice")
                        .WithMany("Orderlist")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("Emart_final.Models.Product", b =>
                {
                    b.HasOne("Emart_final.Models.Category", "category")
                        .WithMany("product")
                        .HasForeignKey("catmasterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Emart_final.Models.Category", b =>
                {
                    b.Navigation("product");
                });

            modelBuilder.Entity("Emart_final.Models.Config", b =>
                {
                    b.Navigation("configDetails");
                });

            modelBuilder.Entity("Emart_final.Models.Customer", b =>
                {
                    b.Navigation("invoiceList");

                    b.Navigation("orderList");
                });

            modelBuilder.Entity("Emart_final.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetailstList");

                    b.Navigation("Orderlist");
                });

            modelBuilder.Entity("Emart_final.Models.Product", b =>
                {
                    b.Navigation("configDetailsList");

                    b.Navigation("invoiceDetailsList");
                });
#pragma warning restore 612, 618
        }
    }
}
